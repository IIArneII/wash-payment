swagger: "2.0"
info:
  description: "Payment system service for self-service car washes"
  title: wash-payment
  version: 1.1.0
consumes:
  - application/json
produces:
  - application/json
schemes:
  - http
securityDefinitions:
  authKey:
    description: Session token inside Authorization header.
    type: apiKey
    in: header
    name: Authorization
security:
  - authKey: []

paths:
  /healthCheck:
    get:
      tags:
        - Standard
      operationId: healthCheck
      summary: Health check
      description: Checking the server health status.
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              ok:
                type: boolean
  
  /organizations:
    get:
      tags:
        - Organizations
      operationId: list
      summary: Get organizations
      description: Get a list of organizations
      security:
        - authKey: []
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Organization"
        403: {$ref: '#/responses/Forbidden'}
        default: {$ref: '#/responses/InternalError'}

  /organizations/{id}:
    get:
      tags:
        - Organizations
      operationId: get
      summary: Get organization
      description: Get information about the specified organization
      security:
        - authKey: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Organization"
        403: {$ref: '#/responses/Forbidden'}
        404: {$ref: '#/responses/NotFound'}
        default: {$ref: '#/responses/InternalError'}

  /organizations/{id}/deposit:
    post:
      tags:
        - Organizations
      operationId: deposit
      summary: Top up balance
      description: Increase the balance of the specified organization by the specified number of kopecks
      security:
        - authKey: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
          format: uuid
        - name: body
          in: body
          schema:
            $ref: "#/definitions/Deposit"
      responses:
        204:
          description: OK
        400: {$ref: '#/responses/BadRequest'}
        403: {$ref: '#/responses/Forbidden'}
        404: {$ref: '#/responses/NotFound'}
        default: {$ref: '#/responses/InternalError'}

  /organizations/{id}/transactions:
    get:
      tags:
        - Organizations
      operationId: transactions
      summary: Get organization transactions
      description: Get a list of transactions for the specified organization
      security:
        - authKey: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Transaction"
        403: {$ref: '#/responses/Forbidden'}
        404: {$ref: '#/responses/NotFound'}
        default: {$ref: '#/responses/InternalError'}

responses:
  BadRequest:
    description: Bad request
    schema:
      $ref: "#/definitions/Error"
  Forbidden:
    description: Forbidden
    schema:
      $ref: "#/definitions/Error"
  NotFound:
    description: Not found
    schema:
      $ref: "#/definitions/Error"
  InternalError:
    description: Internal error
    schema:
      $ref: "#/definitions/Error"

definitions:
  Error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        description: Either same as HTTP Status Code OR >= 600
        type: integer
        format: int32
      message:
        type: string
  
  Deposit:
    type: object
    properties:
      amount:
        description: Amount in kopecks (RUB * 10^2)
        type: integer
        format: int64
        minimum: 1
    required:
    - amount
  
  Organization:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      displayName:
        type: string
      description:
        type: string
      balance:
        description: Balance in kopecks (RUB * 10^2)
        type: integer
        format: int64
        minimum: 0
    required:
    - id
    - name
    - displayName
    - description
    - balance

  Transaction:
    type: object
    properties:
      id:
        type: string
        format: uuid
      createdAt:
        type: string
        format: date-time
      operation:
        type: string
        enum: ["deposit", "debit"]
      amount:
        description: Amount in kopecks (RUB * 10^2)
        type: integer
        format: int64
        minimum: 1
      sevice:
        type: string
    required:
      - id
      - createdAt
      - operation
      - amount
      - sevice
