// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"wash-payment/internal/pkg/openapi/models"
)

// DepositNoContentCode is the HTTP code returned for type DepositNoContent
const DepositNoContentCode int = 204

/*
DepositNoContent OK

swagger:response depositNoContent
*/
type DepositNoContent struct {
}

// NewDepositNoContent creates DepositNoContent with default headers values
func NewDepositNoContent() *DepositNoContent {

	return &DepositNoContent{}
}

// WriteResponse to the client
func (o *DepositNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

func (o *DepositNoContent) DepositResponder() {}

// DepositBadRequestCode is the HTTP code returned for type DepositBadRequest
const DepositBadRequestCode int = 400

/*
DepositBadRequest Bad request

swagger:response depositBadRequest
*/
type DepositBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDepositBadRequest creates DepositBadRequest with default headers values
func NewDepositBadRequest() *DepositBadRequest {

	return &DepositBadRequest{}
}

// WithPayload adds the payload to the deposit bad request response
func (o *DepositBadRequest) WithPayload(payload *models.Error) *DepositBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deposit bad request response
func (o *DepositBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DepositBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *DepositBadRequest) DepositResponder() {}

// DepositForbiddenCode is the HTTP code returned for type DepositForbidden
const DepositForbiddenCode int = 403

/*
DepositForbidden Forbidden

swagger:response depositForbidden
*/
type DepositForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDepositForbidden creates DepositForbidden with default headers values
func NewDepositForbidden() *DepositForbidden {

	return &DepositForbidden{}
}

// WithPayload adds the payload to the deposit forbidden response
func (o *DepositForbidden) WithPayload(payload *models.Error) *DepositForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deposit forbidden response
func (o *DepositForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DepositForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *DepositForbidden) DepositResponder() {}

// DepositNotFoundCode is the HTTP code returned for type DepositNotFound
const DepositNotFoundCode int = 404

/*
DepositNotFound Not found

swagger:response depositNotFound
*/
type DepositNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDepositNotFound creates DepositNotFound with default headers values
func NewDepositNotFound() *DepositNotFound {

	return &DepositNotFound{}
}

// WithPayload adds the payload to the deposit not found response
func (o *DepositNotFound) WithPayload(payload *models.Error) *DepositNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deposit not found response
func (o *DepositNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DepositNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *DepositNotFound) DepositResponder() {}

/*
DepositDefault Internal error

swagger:response depositDefault
*/
type DepositDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDepositDefault creates DepositDefault with default headers values
func NewDepositDefault(code int) *DepositDefault {
	if code <= 0 {
		code = 500
	}

	return &DepositDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the deposit default response
func (o *DepositDefault) WithStatusCode(code int) *DepositDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the deposit default response
func (o *DepositDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the deposit default response
func (o *DepositDefault) WithPayload(payload *models.Error) *DepositDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deposit default response
func (o *DepositDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DepositDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *DepositDefault) DepositResponder() {}

type DepositNotImplementedResponder struct {
	middleware.Responder
}

func (*DepositNotImplementedResponder) DepositResponder() {}

func DepositNotImplemented() DepositResponder {
	return &DepositNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.Deposit has not yet been implemented",
		),
	}
}

type DepositResponder interface {
	middleware.Responder
	DepositResponder()
}
